#include "¬екторћножество.h"

namespace ƒвижок–ендеринга {

	¬екторћножество::¬екторћножество()
	
	{
		glGenVertexArrays(1, &п_id);
	}

	¬екторћножество::~¬екторћножество()
	{
		glDeleteVertexArrays(1, &п_id);
	
	}

	¬екторћножество& ¬екторћножество::operator = ( ¬екторћножество&& векторћножество) noexcept
	{
		п_id = векторћножество.п_id;
		векторћножество.п_id = 0;
		return *this;

	}

	¬екторћножество::¬екторћножество(¬екторћножество&& векторћножество) noexcept
	{
		п_id = векторћножество.п_id;
		векторћножество.п_id = 0;

	}

	void ¬екторћножество::св€зывать() const
	{
		glBindVertexArray(п_id);

	}

	void ¬екторћножество::разв€зывать() const
	{
		glBindVertexArray(0);
	}

	void ¬екторћножество::добавитьЅуфер(const ¬екторЅуффер& векторЅуффер, const –асположение¬екторЅуфера& расположение)
	{
		св€зывать();
		векторЅуффер.св€зывать();
		const auto& компоновкиЁлемента = расположение.получит омпоновкиЁлемента();
		GLbyte* смещение = nullptr;
		for (unsigned int i = 0; i < компоновкиЁлемента.size(); ++i)
		{
			const auto& текущийЁлемент омпоновки = компоновкиЁлемента[i];
			GLuint текущий»ндексѕринадлежности = п_элемент—читать + i;
			glEnableVertexAttribArray(текущий»ндексѕринадлежности);
			glVertexAttribPointer(текущий»ндексѕринадлежности, текущийЁлемент омпоновки.считать, текущийЁлемент омпоновки.тип, текущийЁлемент омпоновки.нормализовать, расположение.получитЎаг(), смещение);
			смещение += текущийЁлемент омпоновки.размер;
		}
		п_элемент—читать += static_cast<unsigned int>(компоновкиЁлемента.size());
	}
}