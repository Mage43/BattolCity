#include "–есурсныйћенеджер.h"
#include "../–ендор/Ўейдерна€ѕрограмма.h"

#include<sstream>
#include<fstream>
#include<iostream>

–есурсныйћенеджер::–есурсныйћенеджер(const std::string& ѕутьисполнимый)
{
	size_t нашел = ѕутьисполнимый.find_last_of("/\\");
	п_ѕуть = ѕутьисполнимый.substr(0, нашел);
}

 std::string –есурсныйћенеджер:: получить—троку‘айла(const std::string& относительный‘айлаѕути)
{
	 std::ifstream ф;
	 ф.open(п_ѕуть + "/" + относительный‘айлаѕути.c_str(), std::ios::in | std::ios::binary);
	 if (!ф.is_open())
	 {
		 std::cerr << "ќЎ»Ѕ ј ѕ–» ќ“ –џ¬јЌ»≈ ‘ј…Ћј: "<< относительный‘айлаѕути << std::endl;
		 return std::string{};
	 }


	 std::stringstream буфер;
	 буфер << ф.rdbuf();
	 return буфер.str();

}


 std::shared_ptr< –ендор::Ўейдерна€ѕрограмма> –есурсныйћенеджер::загрускаЎедоры(const std::string& »м€Ўедора, const std::string& ¬ершинныйѕуть, const std::string& ‘рагментныйѕуть)
 {
	 std::string ¬ершинныйЎейдер = получить—троку‘айла(¬ершинныйѕуть);
	 if (¬ершинныйЎейдер.empty())
	 {
		 std::cerr << "Ќет ¬ершинный Ўейдер!" << std::endl;
		 return nullptr;
	 }


	 std::string ‘рагментныйЎейдер = получить—троку‘айла(‘рагментныйѕуть);
	 if (‘рагментныйЎейдер.empty())
	 {
		 std::cerr << "Ќет ‘рагментный Ўейдер!" << std::endl;
		 return nullptr;
	 }
	 std::shared_ptr<–ендор::Ўейдерна€ѕрограмма>& новыйЎедор = п_Ўейдерна€ѕрограмма.emplace(»м€Ўедора, std::make_shared<–ендор::Ўейдерна€ѕрограмма>(¬ершинныйЎейдер, ‘рагментныйЎейдер)).first->second;
	 if (новыйЎедор->воз апел€ции())
	 {
		 return новыйЎедор;
	 }

	 std::cerr << "Ќе копелирулс€ шейдор програма\n "
		 << "¬ершинный" << ¬ершинныйѕуть << "\n"
		 << "‘рагментный" << ‘рагментныйѕуть << std::endl;

	 return nullptr;
 }

 std::shared_ptr< –ендор::Ўейдерна€ѕрограмма> –есурсныйћенеджер::получатьЎудоровѕрограмм(const std::string& »м€Ўедора)
 {
	 Ўейдерна€ѕрограммаѕлан::const_iterator им = п_Ўейдерна€ѕрограмма.find(»м€Ўедора);
	 if (им != п_Ўейдерна€ѕрограмма.end())
	 {
		 return им->second;
	 }
	 std::cerr<<"Ќе нашли шейдор програма: "<< »м€Ўедора<< std::endl;

	 return nullptr;
	 
 }
